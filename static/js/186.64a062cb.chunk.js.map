{"version":3,"file":"static/js/186.64a062cb.chunk.js","mappings":"+QAEaA,EAAQC,EAAAA,GAAAA,IAAH,yCAILC,EAAWD,EAAAA,GAAAA,GAAH,mFAMRE,EAAWF,EAAAA,GAAAA,GAAH,gFAMRG,EAAeH,EAAAA,GAAAA,GAAH,0E,+GCqBzB,UA/BoB,WAClB,OAA0BI,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,KAAKL,EACjC,GAAE,CAACC,KAGF,8BACa,OAAVF,GAAkBA,EAAMO,QAAQC,OAAS,GACxC,iCACE,SAAC,KAAD,UACGR,EAAMO,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACjB,2BACE,UAAC,IAAD,sBAAeD,MACf,SAAC,KAAD,UAAYC,MAFLF,EADQ,OAOrB,SAAC,EAAAG,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UAIJ,SAAC,IAAD,yDAIP,C,qECnCYC,E,QAAOpB,GAAAA,EAAH,gE,6OCAJqB,EAASrB,EAAAA,GAAAA,OAAH,gKASNsB,EAAOtB,EAAAA,GAAAA,IAAH,0CAIJuB,EAAOvB,EAAAA,GAAAA,IAAH,uGAOJwB,EAAMxB,EAAAA,GAAAA,IAAH,sMAUHyB,EAAazB,EAAAA,GAAAA,GAAH,2EAMV0B,EAAY1B,EAAAA,GAAAA,EAAH,2EAMT2B,EAAW3B,EAAAA,GAAAA,GAAH,0E,mMC1Cf4B,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASC,KAAKvB,SAPhB,kEAUA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BrB,GAA9B,wFACkBe,EAAAA,EAAAA,GAAM,SAAD,OAAUf,GAAM,CAC1CgB,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,wFACkBR,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTK,KAAM,GACNK,MAAAA,KALC,cACCJ,EADD,yBASEA,EAASC,KAAKvB,SAThB,kEAaA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,wFACkBe,EAAAA,EAAAA,GAAM,SAAD,OAAUf,EAAV,YAAwB,CAClDgB,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEASA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCK,GAAjC,wFACkBe,EAAAA,EAAAA,GAAM,SAAD,OAAUf,EAAV,YAAwB,CAClDgB,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEA3CPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.styled.js","components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.js","pages/MovieDetailsPage/MovieDetails.styled.js","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Image = styled.img`\n  widht: 250px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const CastCard = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const CastSubtitle = styled.h3`\n  color: black;\n  font-size: 20px;\n  margin: 0;\n`;\n","import { fetchMovieReviews } from 'services/moviesApi';\nimport { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { Text } from './Reviews.styled';\nimport { CastList } from 'components/Cast/Cast.styled';\nimport { TextMovie } from 'pages/MovieDetailsPage/MovieDetails.styled';\n\nconst ReviewsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      {movie !== null && movie.results.length > 0 ? (\n        <>\n          <CastList>\n            {movie.results.map(({ id, author, content }) => (\n              <li key={id}>\n                <Text>Author: {author}</Text>\n                <TextMovie>{content}</TextMovie>\n              </li>\n            ))}\n          </CastList>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <Text>We don`t have any reviews for this movie.</Text>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 30px;\n  font-weight: 600;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  font-size: 15px;\n  margin-bottom: 10px;\n  padding: 10px 40px;\n  border-radius: 10px;\n  background-color: black;\n  color: white;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n`;\n\nexport const Wrap = styled.div`\n  padding: 0 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Div = styled.div`\n  border-bottom: 4px solid #392e2e;\n  border-top: 4px solid #392e2e;\n  margin-top: 10px;\n  padding: 10px 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const TitleMovie = styled.h2`\n  color: black;\n  font-size: 35px;\n  margin: 0;\n`;\n\nexport const TextMovie = styled.p`\n  color: black;\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const Subtitle = styled.h3`\n  color: black;\n  font-size: 30px;\n  margin: 0;\n`;\n","import axios from 'axios';\n\nconst Key = '737f44acb671945f08fdde769a8111c9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: Key,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: Key,\n      size: 20,\n      query,\n    },\n  });\n\n  return response.data.results;\n}\n\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\n"],"names":["Image","styled","CastList","CastCard","CastSubtitle","useState","movie","setMovie","movieId","useParams","useEffect","fetchMovieReviews","then","results","length","map","id","author","content","Suspense","fallback","Text","Button","Card","Wrap","Div","TitleMovie","TextMovie","Subtitle","Key","fetchMovies","axios","params","api_key","size","response","data","fetchMovieById","fetchMovieByName","query","fetchMovieCast"],"sourceRoot":""}