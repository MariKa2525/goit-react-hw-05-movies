{"version":3,"file":"static/js/197.27ddc26d.chunk.js","mappings":"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","sources":["pages/HomePage.styled.js","pages/MovieDetailsPage/MovieDetails.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","hooks/useFetchMovie/useFetchMovie.jsx","services/moviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ContainerMovie = styled.div`\n  max-width: 1800px;\n  margin: 0;\n  padding: 15px;\n  margin: 0 auto;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: blue;\n  font-size: 25px;\n\n  &.active {\n    color: red;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: black;\n  font-size: 40px;\n  margin-left: 40px;\n`;\n\nexport const Ul = styled.ul`\n  color: black;\n  margin: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  font-size: 15px;\n  margin-bottom: 10px;\n  padding: 10px 40px;\n  border-radius: 10px;\n  background-color: black;\n  color: white;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n`;\n\nexport const Wrap = styled.div`\n  padding: 0 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Div = styled.div`\n  border-bottom: 4px solid #392e2e;\n  border-top: 4px solid #392e2e;\n  margin-top: 10px;\n  padding: 10px 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const TitleMovie = styled.h2`\n  color: black;\n  font-size: 35px;\n  margin: 0;\n`;\n\nexport const TextMovie = styled.p`\n  color: black;\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const Subtitle = styled.h3`\n  color: black;\n  font-size: 30px;\n  margin: 0;\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { useFetchMovie } from '../../hooks/useFetchMovie/useFetchMovie';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Button,\n  Card,\n  Div,\n  Subtitle,\n  TextMovie,\n  TitleMovie,\n  Wrap,\n} from './MovieDetails.styled';\nimport { ContainerMovie, StyledLink } from 'pages/HomePage.styled';\nimport { Suspense } from 'react';\n\nconst MovieDetailsPage = () => {\n  const movie = useFetchMovie();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  return (\n    <ContainerMovie>\n      <div>\n        <Button onClick={() => navigate(location?.state?.from ?? '/')}>\n          Go back\n        </Button>\n      </div>\n\n      {movie && (\n        <>\n          <Card>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path} `}\n              alt={movie.title}\n              width=\"300\"\n            />\n            <Wrap>\n              <TitleMovie>{movie.title}</TitleMovie>\n              <TextMovie>\n                {' '}\n                User Score: <span>\n                  {Math.round(movie.popularity) + '%'}\n                </span>{' '}\n              </TextMovie>\n              <Subtitle>Overview</Subtitle>\n              <TextMovie>{movie.overview}</TextMovie>\n              <Subtitle>Genres</Subtitle>\n              <ul>\n                {movie.genres.map(name => {\n                  return (\n                    <li key={name.name}>\n                      <TextMovie>{name.name}</TextMovie>\n                    </li>\n                  );\n                })}\n              </ul>\n            </Wrap>\n          </Card>\n          <Div>\n            <Subtitle>Additional information</Subtitle>\n            <StyledLink to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </StyledLink>\n            <StyledLink to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </StyledLink>\n          </Div>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </ContainerMovie>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchMovieById } from 'services/moviesApi'\n\nexport const useFetchMovie = () => {\n    const[movie, setMovie]=useState(null)\n    const {movieId} = useParams()\n\n    useEffect(() => {\n        fetchMovieById(movieId).then(setMovie)\n    }, [movieId])\n// console.log(movieId)\n    return movie\n\n}\n\n","import axios from 'axios';\n\nconst Key = '737f44acb671945f08fdde769a8111c9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: Key,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: Key,\n      size: 20,\n      query,\n    },\n  });\n\n  return response.data.results;\n}\n\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\n"],"names":["ContainerMovie","styled","StyledLink","Link","Title","Ul","Button","Card","Wrap","Div","TitleMovie","TextMovie","Subtitle","movie","useState","setMovie","movieId","useParams","useEffect","fetchMovieById","then","useFetchMovie","navigate","useNavigate","location","useLocation","onClick","state","from","src","poster_path","alt","title","width","Math","round","popularity","overview","genres","map","name","to","Suspense","fallback","Key","fetchMovies","axios","params","api_key","size","response","data","results","id","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}