{"version":3,"file":"static/js/583.85458a77.chunk.js","mappings":"8LAkDA,UA7CiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,KAAKL,EAC9B,GAAE,CAACC,KASF,8BACa,OAAVF,GAAkBA,EAAMO,KAAKC,OAAS,GACrC,iCACE,wBACGR,EAAMO,KAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACd,0BACGF,IACC,gBACEG,IAAG,yCAAoCH,EAApC,KACHI,IAAKH,EACLI,MAAM,SAGV,uBAAIJ,KACJ,uCAAeC,OATRH,EADK,OAclB,SAAC,EAAAO,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UAIJ,+EAIP,C,+LC9CKC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlB,GAA9B,wFACkBW,EAAAA,EAAAA,GAAM,SAAD,OAAUX,GAAM,CAC1CY,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,wFACkBT,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTK,KAAM,GACNM,MAAAA,KALC,cACCL,EADD,yBASEA,EAASC,KAAKC,SAThB,kEAYA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BK,GAA9B,wFACkBW,EAAAA,EAAAA,GAAM,SAAD,OAAUX,EAAV,YAAwB,CAClDY,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCrB,GAAjC,wFACkBW,EAAAA,EAAAA,GAAM,SAAD,OAAUX,EAAV,YAAwB,CAClDY,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEA1CPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/CastPage/CastPage.jsx","services/moviesApi.js"],"sourcesContent":["import { fetchMovieCast } from 'services/moviesApi';\nimport { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\n\nconst CastPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  // console.log(movie.cast.length)\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(setMovie);\n  }, [movieId]);\n\n  // return (\n  //   <>\n  //    {movie !== null && movie.cast.length > 0 ? (<p>'good'</p>) : (<p>'We don`t have iformation about cast of this movie.'</p>)}\n  //   </>\n  // )\n\n  return (\n    <>\n      {movie !== null && movie.cast.length > 0 ? (\n        <>\n          <ul>\n            {movie.cast.map(({ id, profile_path, name, character }) => (\n              <li key={id}>\n                {profile_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w300${profile_path} `}\n                    alt={name}\n                    width=\"150\"\n                  />\n                )}\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            ))}\n          </ul>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <p>We don`t have iformation about cast of this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst Key = '737f44acb671945f08fdde769a8111c9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: Key,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: Key,\n      size: 20,\n      query,\n    },\n  });\n\n  return response.data.results;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\n"],"names":["useState","movie","setMovie","movieId","useParams","useEffect","fetchMovieCast","then","cast","length","map","id","profile_path","name","character","src","alt","width","Suspense","fallback","Key","fetchMovies","axios","params","api_key","size","response","data","results","fetchMovieById","fetchMovieByName","query","fetchMovieReviews"],"sourceRoot":""}