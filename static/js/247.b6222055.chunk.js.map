{"version":3,"file":"static/js/247.b6222055.chunk.js","mappings":"gOAiDA,UAzCiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,KAAKL,EAC9B,GAAE,CAACC,KAGF,8BACa,OAAVF,GAAkBA,EAAMO,KAAKC,OAAS,GACrC,iCACE,SAAC,KAAD,UACGR,EAAMO,KAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACd,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,EACLK,MAAM,SAGR,SAAC,KAAD,UAAeL,KACf,UAAC,KAAD,yBAA0BC,EAA1B,SAZaH,EADD,OAiBlB,SAAC,EAAAQ,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UAIJ,SAAC,IAAD,kEAIP,C,+JC7CYC,EAAQC,EAAAA,GAAAA,IAAH,yCAILC,EAAWD,EAAAA,GAAAA,GAAH,mFAMRE,EAAWF,EAAAA,GAAAA,GAAH,gFAMRG,EAAeH,EAAAA,GAAAA,GAAH,0E,qEChBZI,E,QAAOJ,GAAAA,EAAH,gE,mMCAXK,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BzB,GAA9B,wFACkBkB,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,GAAM,CAC1CmB,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,wFACkBT,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTK,KAAM,GACNM,MAAAA,KALC,cACCL,EADD,yBASEA,EAASC,KAAKC,SAThB,kEAaA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BK,GAA9B,wFACkBkB,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,EAAV,YAAwB,CAClDmB,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiC5B,GAAjC,wFACkBkB,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,EAAV,YAAwB,CAClDmB,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASC,MANX,kEA3CPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.js","components/Reviews/Reviews.styled.js","services/moviesApi.js"],"sourcesContent":["import { fetchMovieCast } from 'services/moviesApi';\nimport { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport noFoto from '../../image/noFoto.jpg';\nimport { CastCard, CastList, CastSubtitle, Image } from './Cast.styled';\nimport { Text } from 'components/Reviews/Reviews.styled';\n\nconst CastPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      {movie !== null && movie.cast.length > 0 ? (\n        <>\n          <CastList>\n            {movie.cast.map(({ id, profile_path, name, character }) => (\n              <CastCard key={id}>\n                <Image\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                      : noFoto\n                  }\n                  alt={name}\n                  width=\"150\"\n                />\n\n                <CastSubtitle>{name}</CastSubtitle>\n                <CastSubtitle>Character: {character} </CastSubtitle>\n              </CastCard>\n            ))}\n          </CastList>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <Text>We don`t have iformation about cast of this movie.</Text>\n      )}\n    </>\n  );\n};\n\nexport default CastPage;\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  widht: 250px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const CastCard = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const CastSubtitle = styled.h3`\n  color: black;\n  font-size: 20px;\n  margin: 0;\n`;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 30px;\n  font-weight: 600;\n`;\n","import axios from 'axios';\n\nconst Key = '737f44acb671945f08fdde769a8111c9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: Key,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: Key,\n      size: 20,\n      query,\n    },\n  });\n\n  return response.data.results;\n}\n\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\n"],"names":["useState","movie","setMovie","movieId","useParams","useEffect","fetchMovieCast","then","cast","length","map","id","profile_path","name","character","src","noFoto","alt","width","Suspense","fallback","Image","styled","CastList","CastCard","CastSubtitle","Text","Key","fetchMovies","axios","params","api_key","size","response","data","results","fetchMovieById","fetchMovieByName","query","fetchMovieReviews"],"sourceRoot":""}