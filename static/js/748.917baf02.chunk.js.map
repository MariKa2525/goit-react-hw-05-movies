{"version":3,"file":"static/js/748.917baf02.chunk.js","mappings":"+NAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gHAUVE,EAAQF,EAAAA,GAAAA,GAAH,4D,kJCXLG,EAAQH,EAAAA,GAAAA,MAAH,0CAILI,EAAMJ,EAAAA,GAAAA,OAAH,0C,SC0ChB,EAzCmB,WACjB,OAAoDK,EAAAA,EAAAA,UAAS,IAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,aAC7BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACU,KAAdJ,GAAkC,OAAdA,IACtBK,EAAAA,EAAAA,IAAiBL,GAAWM,MAAK,SAAAC,GAE/BX,EAAsBW,EACvB,GACJ,GAAE,CAACP,IASJ,OACE,iCACE,kBAAMQ,SATW,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OACjBb,EAAgB,CAAEC,UAAWW,EAAKE,SAASb,UAAUc,QACrDH,EAAKI,OACN,EAIG,WACE,SAACvB,EAAD,CAAOwB,KAAK,OAAOC,KAAK,eACxB,SAACxB,EAAD,CAAKuB,KAAK,SAAV,wBAEF,wBACGrB,EAAmBuB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACtB,yBACE,SAAC,IAAD,CAAYC,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAMrB,GAA/C,SAA2DiB,KADpDC,EADa,OAM1B,SAAC,EAAAI,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,+LC5CKC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASzB,KAAK0B,SAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bd,GAA9B,wFACkBQ,EAAAA,EAAAA,GAAM,SAAD,OAAUR,GAAM,CAC1CS,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASzB,MANX,kEASA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAgC8B,GAAhC,wFACkBP,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTK,KAAM,GACNI,MAAAA,KALC,cACCH,EADD,yBASEA,EAASzB,KAAK0B,SAThB,kEAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BhB,GAA9B,wFACkBQ,EAAAA,EAAAA,GAAM,SAAD,OAAUR,EAAV,YAAwB,CAClDS,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASzB,MANX,kEASA,SAAe8B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjB,GAAjC,wFACkBQ,EAAAA,EAAAA,GAAM,SAAD,OAAUR,EAAV,YAAwB,CAClDS,OAAQ,CACNC,QAASJ,KAHR,cACCM,EADD,yBAMEA,EAASzB,MANX,kEA1CPqB,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/HomePage.styled.js","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\ncolor: blue;\nfont-size: 20px;\nmargin-bottom: 10px;\n\n&.active {\n    color: red;\n}\n`\n\nexport const Title = styled.h1`\ncolor: black;\nfont-size: 40px;\n\n\n`","import styled from \"styled-components\";\n\nexport const Input = styled.input`\nfont-size: 25px;\n`\n\nexport const Btn = styled.button`\nfont-size: 25px;\n`","import { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from '../../services/moviesApi';\nimport { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport { StyledLink } from 'pages/HomePage.styled';\nimport { Btn, Input } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [moviesSearchByWord, setMoviesSearchByWord] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName');\n  const location = useLocation()\n\n  useEffect(() => {\n    if (movieName !== '' && movieName !== null)\n      fetchMovieByName(movieName).then(data => {\n        // console.log(data);\n        setMoviesSearchByWord(data);\n      });\n  }, [movieName]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    setSearchParams({ movieName: form.elements.movieName.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"movieName\" />\n        <Btn type=\"submit\">Search</Btn>\n      </form>\n      <ul>\n        {moviesSearchByWord.map(({ title, id }) => (\n          <li key={id}>\n            <StyledLink to={`/movies/${id}`} state={{from: location}}>{title}</StyledLink>\n          </li>\n        ))}\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst Key = '737f44acb671945f08fdde769a8111c9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: Key,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: Key,\n      size: 20,\n      query,\n    },\n  });\n\n  return response.data.results;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: Key,\n    },\n  });\n  return response.data;\n}\n\n"],"names":["StyledLink","styled","Link","Title","Input","Btn","useState","moviesSearchByWord","setMoviesSearchByWord","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","fetchMovieByName","then","data","onSubmit","evt","preventDefault","form","target","elements","value","reset","type","name","map","title","id","to","state","from","Suspense","fallback","Key","fetchMovies","axios","params","api_key","size","response","results","fetchMovieById","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}